<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="eu.greenhouseinnovation.selly.common.model.dao.DealDao">

    <select id="getById" parameterType="string" resultType="Deal" resultMap="DealResult">
        SELECT deals.*,deals_text.`title`, deals_text.`type`,deals_text.`shortDescription`,deals_text.`fullDescription`  FROM deals
        inner join deals_text on deals.id = deals_text.`deals_id`
        WHERE deals.id = #{dealId}
        and deals_text.`locale` = #{locale}
    </select>

    <select id="getByIds" resultType="Deal" resultMap="DealResult">
        SELECT deals.*,deals_text.`title`, deals_text.`type`,deals_text.`shortDescription`,deals_text.`fullDescription`  FROM deals
        inner join deals_text on deals.id = deals_text.`deals_id`
        WHERE deals_text.`locale` = #{locale}
        and deals.id IN
        <foreach item="dealId" index="index" collection="dealIds" open="(" separator="," close=")">
            #{dealId}
        </foreach>
    </select>

    <!-- Returns orders based on location id and filtered by search term -->
    <select id="getBySearchInLocation" resultType="Deal" resultMap="DealResult">
        SELECT DISTINCT d.*,deals_text.`title`, deals_text.`type`,deals_text.`shortDescription`,deals_text.`fullDescription`  FROM deals d
        inner join deals_text on d.id = deals_text.`deals_id`
        INNER JOIN store s ON d.`storeId`=s.id
        WHERE deals_text.`locale` = #{locale}
        and s.`active`=1
                    AND d.`shoppingMallId`= #{locationId}
                    AND d.isPublished = 1
                    AND d.startDate &lt;= NOW()
                    AND d.endDate &gt;= NOW()
                    and (deals_text.`title` LIKE #{searchTerm} || deals_text.`shortDescription` LIKE #{searchTerm} || deals_text.`fullDescription` LIKE #{searchTerm})
               ORDER BY d.dateCreated DESC;
    </select>

    <select id="getDealsForLocation" resultType="Deal" resultMap="DealResult">
        SELECT deals.*,deals_text.`title`, deals_text.`type`,deals_text.`shortDescription`,deals_text.`fullDescription`  FROM deals
        inner join deals_text on deals.id = deals_text.`deals_id`
        JOIN store ON deals.storeId = store.id
        WHERE deals_text.`locale` = #{locale}
        and store.active != '0'
        AND deals.shoppingMallId = #{locationId}
        AND deals.isPublished != '0'
        AND deals.startDate &lt; NOW()
        AND deals.endDate &gt; NOW()
        <if test="dateSince != null">AND deals.dateCreated &gt; #{dateSince}</if>
        <if test="dateUntil != null">AND deals.dateCreated &lt; #{dateUntil}</if>
        ORDER BY deals.dateCreated DESC
    </select>

    <select id="getByUserId" parameterType="string" resultType="Deal" resultMap="DealResult">
        SELECT deals.*,deals_text.`title`, deals_text.`type`,deals_text.`shortDescription`,deals_text.`fullDescription`  FROM deals
        inner join deals_text on deals.id = deals_text.`deals_id`
        WHERE deals_text.`locale` = #{locale}
        and userCreated = #{userId}
        ORDER BY endDate DESC
    </select>

    <select id="getByStoreId" parameterType="string" resultType="Deal" resultMap="DealResult">
        SELECT deals.*,deals_text.`title`, deals_text.`type`,deals_text.`shortDescription`,deals_text.`fullDescription`  FROM deals
        inner join deals_text on deals.id = deals_text.`deals_id`
        WHERE deals_text.`locale` = #{locale}
        and deals.storeId = #{storeId}
        AND deals.ispublished = 1
        <if test="sinceDate != null">AND deals.startDate <![CDATA[ >= ]]> #{sinceDate}</if>
        <if test="untilDate != null">AND deals.endDate <![CDATA[ <= ]]> #{untilDate}</if>
        ORDER BY deals.endDate DESC
    </select>

    <insert id="storeDeal" keyColumn="id" parameterType="Deal">
        INSERT INTO deals
        (id, shoppingmallid, storeid,
        s3picture, s3thumb,
        quantity, price, discount, storeActivationOnly, isFullDay,
        startDate, endDate, isPublished, dateCreated, dateModified,
        userCreated, userModified,
        originalPrice, customAction, pricingModel, barcode)
        VALUES
        (#{deal.mId}, #{deal.mLocation.id}, #{deal.mStore.id},
        #{deal.mImagePath}, #{deal.mThumbPath},
        #{deal.mQuantity}, #{deal.mPriceCents},
        #{deal.mDiscount}, #{deal.mStoreActivationOnly}, #{deal.mFullDay},
        #{deal.mStartDate}, #{deal.mEndDate}, #{deal.mPublished}, #{deal.mDateCreated}, #{deal.mDateModified},
        #{deal.mUserCreated.id}, #{deal.mUserModified.id},
        #{deal.mOriginalPriceCents}, #{deal.mCustomAction},
        #{deal.mPricingModel, typeHandler=eu.greenhouseinnovation.selly.common.mybatis.handlers.PricingModelHandler},
        #{deal.mBarCode});
    </insert>

    <insert id="storeDealLocale" keyColumn="id" parameterType="Deal">
        insert into deals_text
        (deals_id,locale,title,type,shortDescription,fullDescription)
        values
        (#{deal.mId},#{locale},#{deal.mTitle},
        #{deal.mDealType,typeHandler=eu.greenhouseinnovation.selly.common.mybatis.handlers.DealTypeHandler},
        #{deal.mSummary}, #{deal.mBody});
    </insert>

    <delete id="deleteById" parameterType="string">
        DELETE FROM deals
        WHERE id = #{dealId}
    </delete>


    <update id="update">
        UPDATE deals
        <set>
            <if test="deal.quantity != null">quantity = #{deal.quantity},</if>
            <if test="deal.priceCents != null">price = #{deal.priceCents},</if>
            <if test="deal.discount != null">discount = #{deal.discount},</if>
            <if test="deal.storeActivationOnly != null">storeActivationOnly = #{deal.storeActivationOnly},</if>
            <if test="deal.fullDay != null">isFullDay = #{deal.fullDay},</if>
            <if test="deal.startDate != null">startDate = #{deal.startDate},</if>
            <if test="deal.endDate != null">endDate = #{deal.endDate},</if>
            <if test="deal.published != null">isPublished = #{deal.published},</if>
            <if test="deal.imagePath != null">s3picture = #{deal.imagePath},</if>
            <if test="deal.thumbPath != null">s3thumb = #{deal.thumbPath},</if>

            <if test="deal.dateModified != null">dateModified = #{deal.dateModified},</if>
            <if test="deal.userModified != null">userModified = #{deal.userModified.id},</if>
            <if test="deal.customAction != null">customAction = #{deal.customAction},</if>
            <if test="deal.originalPriceCents != null">originalPrice = #{deal.originalPriceCents},</if>
            <if test="deal.pricingModel != null">pricingModel =
                #{deal.pricingModel, typeHandler=eu.greenhouseinnovation.selly.common.mybatis.handlers.PricingModelHandler},
            </if>
            <if test="deal.barCode != null">barcode = #{deal.barCode},</if>
        </set>
        WHERE id = #{dealId};
    </update>
    <update id="updateLocale">
        UPDATE deals_text
        <set>
            <if test="deal.title != null">title = #{deal.title},</if>
            <if test="deal.summary != null">shortDescription = #{deal.summary},</if>
            <if test="deal.body != null">fullDescription = #{deal.body},</if>
            <if test="deal.dealType != null">type =
                #{deal.dealType, typeHandler=eu.greenhouseinnovation.selly.common.mybatis.handlers.DealTypeHandler},
            </if>
        </set>
        WHERE deals_id = #{dealId};
    </update>

    <!-- Result maps: -->

    <resultMap type="Deal" id="DealResult">
        <constructor>
            <idArg javaType="string" column="id"/>
        </constructor>

        <result property="mTitle" column="title"/>
        <result property="mSummary" column="shortDescription"/>
        <result property="mBody" column="fullDescription"/>

        <result property="mStartDate" column="startDate"/>
        <result property="mEndDate" column="endDate"/>

        <result property="mImagePath" column="s3picture"/>
        <result property="mThumbPath" column="s3thumb"/>

        <result property="mStoreDelivery" column="inStoreDelivery"/>
        <result property="mFullDay" column="isFullDay"/>
        <result property="mFeatured" column="isFeatured"/>

        <result property="mOriginalPriceCents" column="originalPrice"/>
        <result property="mCustomAction" column="customAction"/>
        <result property="mPriceCents" column="price"/>
        <result property="mDiscount" column="discount"/>


        <result property="mDealType" column="type"
                typeHandler="eu.greenhouseinnovation.selly.common.mybatis.handlers.DealTypeHandler"/>
        <result property="mQuantity" column="quantity"/>

        <result property="mDateCreated" column="dateCreated"/>
        <result property="mDateModified" column="dateModified"/>
        <result property="mPricingModel" column="pricingModel"
                typeHandler="eu.greenhouseinnovation.selly.common.mybatis.handlers.PricingModelHandler"/>

        <result property="mBarCode" column="barcode"/>

        <!-- Create sparse objects -->
        <association property="mUserCreated" javaType="User">
            <id property="mId" column="userCreated"/>
        </association>
        <association property="mUserModified" javaType="User">
            <id property="mId" column="userCreated"/>
        </association>
        <association property="mLocation" column="shoppingMallId" javaType="Location"
                     select="eu.greenhouseinnovation.selly.common.model.dao.LocationDao.getById"/>
        <association property="mStore" column="storeId" javaType="Store"
                     select="eu.greenhouseinnovation.selly.common.model.dao.StoreDao.getById"/>
    </resultMap>

</mapper>
