<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="eu.greenhouseinnovation.selly.common.model.dao.FacebookDao">

    <!-- Queries: -->

    <insert id="addConfig" parameterType="FacebookConfig">
        INSERT INTO social_facebook_auth
        (user_id, access_token, description)
        SELECT
        #{userId}, #{config.mAccessToken}, #{config.mDescription}
        FROM (SELECT 1) t
        WHERE NOT EXISTS (SELECT 1 FROM social_facebook_auth WHERE user_id = #{userId})
    </insert>

    <insert id="addPost" parameterType="FacebookPost">
        INSERT INTO social_facebook_posts
        (id, username, user_id, post, page_id, page_name, link_url, date_posted, profile_image, image_url, store_id)
        SELECT
        #{post.mPostId}, #{post.mUsername}, #{post.mUserId}, #{post.mMessage}, #{post.mPageId}, #{post.mPageName}, #{post.mLinkUrl}, #{post.mDatePosted}, #{post.mProfileImage}, #{post.mImageUrl}, #{post.mStoreId}
        FROM (SELECT 1) t
        WHERE NOT EXISTS (SELECT 1 FROM social_facebook_posts WHERE id = #{post.mPostId})
    </insert>

    <delete id="removeConfig">
        DELETE FROM social_facebook_auth WHERE user_id = #{userId}
    </delete>

    <update id="setFacebookAuthInvalid">
        UPDATE social_facebook_auth
        SET is_valid = 0
        WHERE user_id = #{userId} AND access_token = #{fbAuthToken}
    </update>


    <select id="getConfigForUser" resultMap="FacebookConfigResultMap">
        SELECT * FROM social_facebook_auth WHERE user_id = #{userId}
    </select>

    <!-- TODO: add `WHERE is_valid = 1` so we entirely bypass expired tokens (instead of logging and skipping) -->
    <select id="getAllConfigsForLocation" resultType="FacebookConfig" resultMap="FacebookConfigResultMap">
        SELECT social_facebook_auth.*
        FROM social_facebook_auth
        INNER JOIN users ON user_id = users.id
        WHERE users.location_origin = #{locationId};
    </select>

    <select id="getPagesForUser" resultMap="FacebookPageResultMap">
        SELECT page_id FROM social_facebook_page_config WHERE user_id = #{userId}
    </select>

    <select id="getPostsForUser" resultMap="FacebookPostResultMap">
        SELECT * from social_facebook_posts WHERE user_id = #{userId} ORDER BY date_posted DESC LIMIT #{maxItems}
    </select>

    <select id="getPostsForStore" resultMap="FacebookPostResultMap">
        SELECT * from social_facebook_posts WHERE store_id = #{storeId} ORDER BY date_posted DESC LIMIT #{maxItems}
    </select>

    <select id="getLatestPosts" resultMap="FacebookPostResultMap">
        SELECT * from social_facebook_posts ORDER BY date_posted DESC LIMIT #{maxItems}
    </select>

    <select id="getLatestPostsForLocation" resultMap="FacebookPostResultMap">
        SELECT *
        FROM social_facebook_posts
        INNER JOIN store ON social_facebook_posts.user_id = store.ownerUserId
        WHERE store.shoppingMallId = #{locationId}
        ORDER BY date_posted DESC
        LIMIT #{maxItems}
    </select>


    <resultMap type="FacebookPage" id="FacebookPageResultMap">
        <result property="mPageId" column="page_id"/>
    </resultMap>

    <resultMap type="FacebookConfig" id="FacebookConfigResultMap">
        <result property="mAccessToken" column="access_token"/>
        <result property="mUserId" column="user_id"/>
        <result property="mDateCreated" column="date_created" javaType="Date"/>
        <result property="mIsValid" column="is_valid" javaType="Boolean"/>
    </resultMap>

    <resultMap type="FacebookPost" id="FacebookPostResultMap">
        <constructor>
            <idArg javaType="String" column="id"/>
        </constructor>

        <result property="mUsername" column="username"/>
        <result property="mUserId" column="user_id"/>
        <result property="mMessage" column="post"/>
        <result property="mPageId" column="page_id"/>
        <result property="mPageName" column="page_name"/>
        <result property="mLinkUrl" column="link_url"/>
        <result property="mDatePosted" column="date_posted"/>
        <result property="mProfileImage" column="profile_image"/>
        <result property="mImageUrl" column="image_url"/>
        <result property="mStoreId" column="store_id"/>
    </resultMap>

</mapper>
